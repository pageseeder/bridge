/*
 * Copyright 2015 Allette Systems (Australia)
 * http://www.allette.com.au
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.pageseeder.bridge.xml;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.jdt.annotation.Nullable;
import org.pageseeder.bridge.model.PSGroup;
import org.pageseeder.bridge.model.PSResult;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 *
 * @author Christophe Lauret
 * @version 0.2.2
 * @version 0.1.0
 */
public final class PSResultHandler extends DefaultHandler {

  /**
   * Results generated by this handler.
   */
  private final List<PSResult> _results = new ArrayList<>();

  /**
   * Text buffer (state variable)
   */
  private StringBuilder buffer = new StringBuilder();

  /**
   * The current group the result is part of.
   */
  private @Nullable PSGroup group = null;

  /**
   * Result being processed (state variable)
   */
  private @Nullable PSResult result = null;

  /**
   * Current details field position (state variable)
   */
  private @Nullable String field = null;

  @Override
  public void startElement(String uri, String localName, String qName, Attributes atts) throws SAXException {
    if ("document".equals(localName)) {
      this.result = new PSResult(this.group);
    } else if ("field".equals(localName)) {
      this.field = atts.getValue("name");
    } else if ("search".equals(localName)) {
      String groupid = atts.getValue("groupid");
      String groupname = atts.getValue("groupname");
      if (groupname != null) {
        PSGroup g = new PSGroup(groupname);
        if (groupid != null) {
          try {
            g.setId(Long.parseLong(groupid));
          } catch (NumberFormatException ex) {
            // Ignore
          }
        }
        this.group = g;
      }
    }
  }

  @Override
  public void characters(char[] ch, int offset, int len) throws SAXException {
    if (this.field != null) {
      this.buffer.append(ch, offset, len);
    }
  }

  @Override
  public void endElement(String uri, String localName, String qName) throws SAXException {
    PSResult r = this.result;
    if (r != null) {
      if ("document".equals(localName)) {
        this._results.add(r);
        this.result = null;
      } else if ("field".equals(localName)) {
        String f = this.field;
        if (f != null) {
          r.add(new PSResult.Field(f, this.buffer.toString()));
          this.buffer.setLength(0);
          this.field = null;
        }
      }
    }
  }

  /**
   * @return the memberships
   */
  public List<PSResult> listResults() {
    return this._results;
  }

}
